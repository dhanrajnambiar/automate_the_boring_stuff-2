							CHAPTER 7

1)What are the functions that create regex objects?
Ans) re.compile() 

2)Why are raw strings often used creating regex objects?
Ans) If raw strings are not used while creating regex objects then Python would interpret backslash as escape characters and shorthand character classes wont be interpreted correctly.

3)What does search() method return?
Ans) .search() method of regex object return a Match object containing the matched text.

4)How do you get the matched text from a Match object?
Ans) the .group() method of Match object returns the matched text from Match object.

5)In the regex object created from (r'(\d\d\d)-(\d\d\d-\d\d\d\d)') what does group(0), group(1) group(2) cover?
Ans) group(0) covers the whole of regex ie \d\d\d-\d\d\d-\d\d\d\d
	group(1) covers the field within first pair of parenthesis after raw string declaration 'r' ie, (\d\d\d)
	group(2) covers the field within 2nd pair of parenthesis after raw string declaration 'r' ie, (\d\d\d-\d\d\d\d)

6)Parenthesis and periods have special meanings in regex syntax. How would you specify you want to match an actual parenthesis and  period characters?
Ans) parenthesis is used to specify the boundaries of a group in a regex. To match a parenthesis in a regex it should be preceded by backslash symbol '\'
eg: rgexobj = re.compile(r'\(\)')    would match the parenthesis symbols '(' & ')' .
    rgexobj = re.compile(r'\.') would match the period symbol '.'  .

7)The findall() method returns a list of strings or a list of tuples of strings. What makes it return one or the other?   
Ans) .findall() methods returns either a list of strings or a list of tuples.
It returns a list of stings when no groups exist in the regex used. Each item of the list is the string matching the regex.	A list of tuples is returned when the regex contains groups and the items in each tuple will be the text matching the groups of regex.
eg: regeobj = re.compile(r'\d\d\d-\d\d\d-\d\d\d\d')
    print(regeobj.findall('home num: 345-456-5678 and office: 231-123-2314')) 
	>>>> ['345-456-5678','231-123-2314']

    regeobj = re.compile(r'(\d\d\d)-(\d\d\d)-(\d\d\d\d)')
    print(regeobj.findall('home num: 345-456-5678 and office: 231-123-2314'))
	>>>> [('345','456','5678'),('231','123','2314')]

8)What does the '|' character signify in regular expressions?
Ans) The '|' pipe symbol can be used to match multiple texts in a single re.compile() function call.
	eg: 
	    regeobj = re.compile(r'Bat(man|woman|child)')  would match the words 'Batman', 'Batwoman', 'Batchild'.

9)What two things does the symbol '?' do in a regular expressions?
Ans) First symbol '?' can be used to optionally match a string within a regex.
	eg:
		regeobj = re.compile(r'Bat(wo)?man')	can match both regex's 'Batman'  & 'Batwoman'
Secondly '?' can be used to do NonGreedy match the regex.
	eg:
		regeobj = re.compile(r'(\d){3,5}')   would do the Greedy matching ie, would match upto 5 repetitions of deimal number occurences.
		regeobj = re.compile(r'(\d){3,5}')   would do the NonGreedy matching ie, would match upto 3 repetitions of decimal number occurences.


10)What is the difference between *  and   +  in a regex?
Ans) character '*' would match zero to infinite repetitions of the string within () preceding the * ie, it would match the occurence of string if present and as many times as it is present.
	eg: 
		regeobj = re.compile(r'Bat(wo)*man')
		mo = regeobj.search('The Batman is star')
		print(mo.group())
			>>> Batman

		regeobj = re.compile(r'Bat(wo)*man')
		mo = regeobj.search('The Batwowowowowoman is star')
		print(mo.group())
			>>> Batwowowowowoman
Character '+' would match one to infinte repetitions of the string within () preceding the * ie, it would match the occurence of string if present and as many times as it is present.
 	eg:
		regeobj = re.compile(r'Bat(wo)+man')
		mo = regeobj.search('The Batman is star')
		print(mo.group())
			>>> error: NoneType doesn't have .group() method.
		regeobj = re.compile(r'Bat(wo)+man')
		mo = regeobj.search('The Batwowoman is star')
		print(mo.group())
			>>> Batwowoman


11)What is the difference between {3} and {3,5} in regex.?
Ans) {3] would match exactly 3 repetitions of the string within () preceding {3}
whereas {3,5} would match 3 or 4 or 5 repetitions of the string within () preceding {3,5}

12)What does the \d, \s, \w shorthand character classes signify in regex?
Ans) \d represents decimal integers from 0 to 9.
	\s represents space tab ornewline characters.
	\w represents alphabets, digits, or _ character.

13)What does the \D, \S, \W shorthand character classes signify in regex?
Ans) \D represents everything other than decimal digits from 0 to 9
	\S represents evrything other tha space, tab, newline character.
	\W represents everything other than alphabets, digits, or ' _ '

14)How do you make regular expressions case insensitive?
Ans)By passing re.I as 2nd argument to re.compile().
	eg:
		regeobj = re.compile(r'red', re.I)
		mo = regeobj.search('The logo of Red Hat is RED')
		print(mo)
			>>> Red

15)What does the . character normally match?What does it match re.DOTALL is passed as second argumnet to re.compile() function?
Ans) . character normally matches all characters except \n newline charcter. When re.DOTALL is used as second argument it matches even the new line character.

16)What is the difference between '(.*)' and '(.*)?'  ?
Ans) the group .* matches in a greedy fashion whereas <.*?> matches in a nongreedy fashion.

17)What is the character class syntax to match all numbers and lowercase characters?
Ans)regexobj = re.compile(r'[A-Za-z0-9]*')

18)If numregex = re.compile(r'\d+')
what will numregex.sub('X', '12 drummers, 11 pipers, five rings, 3 hens') return?
Ans) 'X drummers, X pipers, five rings, X hens'

19) What does passing re.VERBOSE as second argument to re.compile() does?
Ans)It ignores the white space within the regex and enable us to add comments to the regex's. This make it more readable and a complex regex simpler.

20)How would you write a regex that matches a number with commas for every three digits? It must match the following:
	 '42'
	 '1,234'
	 '6,368,745'
but not the following:
	 '12,34,567' (which has only two digits between the commas)
	 '1234' (which lacks commas)
Ans) regexobj = re.compile(r'(\d){1,2}(,)?(((\d){3},)*(\d){3})?')

21)How would you write a regex that matches the full name of someone whose last name is Nakamoto? You can assume that the first name that comes before it will always be one word that begins with a capital letter.
The regex must match the following:
	 'Satoshi Nakamoto'
	 'Alice Nakamoto'
	 'RoboCop Nakamoto'
but not the following:
	 'satoshi Nakamoto' (where the first name is not capitalized)
	 'Mr. Nakamoto' (where the preceding word has a nonletter character)
	 'Nakamoto' (which has no first name)
	 'Satoshi nakamoto' (where Nakamoto is not capitalized)
Ans)	regexobj = re.compile(r'[A-Z][a-zA-Z]*\sNakamoto')

22)How would you write a regex that matches a sentence where the first word is either Alice, Bob, or Carol; the second word is either eats, pets, or throws; the third word is apples, cats, or baseballs; and the sentence ends with a period? This regex should be case-insensitive. It must match the
following:
	 'Alice eats apples.'
	 'Bob pets cats.'
	 'Carol throws baseballs.'
	 'Alice throws Apples.'
	 'BOB EATS CATS.'
but not the following:
	 'RoboCop eats apples.'
	 'ALICE THROWS FOOTBALLS.'
	 'Carol eats 7 cats.'
Ans)	regexobj = re.compile(r'(alice|bob|carol)\s(eats|throws|pets)\s(apples|cats|baseballs).',re.I)




							CHAPTER 8


1)What is relative path relative to?
Ans) Relative path of a file or directory is relative to present working directory

2)What does an absolute path start with?
Ans) Absolute path starts with the root directory.In Windows C:\ in Linux /

3)What does os.getcwd() and os.chdir() do?
Ans) os.getcwd() returns the current working directory. os.chdir() changes current working directory to what is given as argument.

4)What are . and .. folders?
Ans) '.' indicates current directory and '..' refers to the parent directory

5)In C:\bacon\eggs\spam.txt, which part is the dir name, and which part is the base name?
Ans)C:\bacon\eggs is the dirname and spam.txt is the basename.

6)What are the three “mode” arguments that can be passed to the open() function
Ans)3 modes of open() function are read, write, append. They can be made use of by passing 'r', 'w', 'a' as 2nd arguments to open() function.

7)What happens if an existing file is opened in write mode?
Ans)The file will be overwritten.

8)What is the difference between the read() and readlines() methods?
Ans)read() method will print the contents as a single string, whereas readlines() will print each lines of the files as items of a list.

9)What data structure does a shelf value resemble?
Ans)Shelf value resembles a dictionary. It stores datas  in association with a key.


							
							CHAPTER 14

1)What are some features Excel spreadsheets have that CSV spread-sheets don’t?
Ans)	Don’t have data types for their values—everything is a string
	Don’t have settings for font size or color
	Don’t have multiple worksheets
	Can’t specify cell widths and heights
	Can’t have merged cells
	Can’t have images or charts embedded in them

2)What do you pass to csv.reader() and csv.writer() to create Reader and Writer objects?
Ans)FileObject created using open() function is passed to csv.reader() function.
FileObject created using open() function with write mode is passed to csv.write() function to write to a file

3)What modes do File objects for reader and Writer objects need to be opened in?
Ans)For reader object file object should be in read mode( simply using open() function)
 For writer object it needs to be opened in write mode( using 'w' a second argument in open() function)

4)What method takes a list argument and writes it to a CSV file?
Ans)writerow() method of writer object takes a list of arguments nad write it to .csv file with items of list as elements of a row of spreadsheet.

5)What do the delimiter and lineterminator keyword arguments do?
Ans)delimiter sets the character that can be used to seperate values of a .csv file. By default its a comma. We can set it to different character by specifying as second argument creating writer object. 
eg: writerobject = csv.writer('fileobj name','delimiter = '\t')
Linelimiter sets what should be used at the end of a line in .csv file. By default its set to new line character \n. We can alter it by passing as argument while creating writer object

6)What function takes a string of JSON data and returns a Python data structure?
Ans)loadstring function 'json.loads()'  eg:  jsondataaspython = json.loads(name of variable containing JSON data) converts json data to a dictionary data type in python.

7)What function takes a Python data structure and returns a string of JSON data?
ans)dump string function(). 'json.dumps()' eg: pythondataasjsonstring = json.dumps(name of dict datatype containing python data)












